############
# Bathroom #
############
- id: bathroom_lights_on
  alias: "[Bathroom] Lights On"
  trigger:
    - entity_id: binary_sensor.presence_bathroom
      from: "off"
      platform: state
      to: "on"
  condition:
    - condition: state
      entity_id: binary_sensor.presence_bathroom
      state: "on"
    - condition: state
      entity_id: input_boolean.dnd_bathroom
      state: "off"
  action:
    - data_template:
        entity_id: light.bathroom
        kelvin: "{{ state_attr('sensor.circadian_values', 'colortemp') | int }}"
        brightness_pct: "{{ state_attr('switch.circadian_lighting_bathroom', 'brightness') | int }}"
        transition: 3
      service: light.turn_on

- id: bathroom_lights_off
  alias: "[Bathroom] Lights Off"
  trigger:
    - entity_id: binary_sensor.presence_bathroom
      from: "on"
      platform: state
      to: "off"
  action:
    - data:
        entity_id: light.bathroom
        transition: 5
      service: light.turn_off

- id: bathroom_presence_on_switch
  alias: "[Bathroom] Presence On (Switch)"
  trigger:
    - entity_id: light.switch_bathroom_ceiling
      from: "off"
      platform: state
      to: "on"
    - entity_id: light.bathroom_vanity
      from: "off"
      platform: state
      to: "on"
  condition:
    - condition: state
      entity_id: binary_sensor.someone_home
      state: "on"
  action:
    - data:
        entity_id: input_boolean.presence_bathroom_switch
      service: input_boolean.turn_on

- id: bathroom_presence_off_switch
  alias: "[Bathroom] Presence Off (Switch)"
  trigger:
    - entity_id: light.switch_bathroom_ceiling
      from: "on"
      platform: state
      to: "off"
    - entity_id: light.bathroom_vanity
      from: "on"
      platform: state
      to: "off"
  condition:
    - condition: state
      entity_id: binary_sensor.someone_home
      state: "on"
    - condition: state
      entity_id: light.switch_bathroom_ceiling
      state: "off"
    - condition: state
      entity_id: light.bathroom_vanity
      state: "off"
  action:
    - data:
        entity_id: input_boolean.presence_bathroom_switch
      service: input_boolean.turn_off
    - data:
        entity_id: input_boolean.presence_bathroom_assistant
      service: input_boolean.turn_off

- id: bathroom_presence_on_door
  alias: "[Bathroom] Presence On (Door)"
  trigger:
    - entity_id: binary_sensor.bathroom_door_sensor
      from: "on"
      platform: state
      to: "off"
  condition:
    - condition: state
      entity_id: binary_sensor.someone_home
      state: "on"
  action:
    - data:
        entity_id: input_boolean.presence_bathroom_door
      service: input_boolean.turn_on

- id: bathroom_presence_off_door
  alias: "[Bathroom] Presence Off (Door)"
  trigger:
    - entity_id: binary_sensor.bathroom_door_sensor
      from: "off"
      platform: state
      to: "on"
  condition:
    - condition: state
      entity_id: binary_sensor.someone_home
      state: "on"
  action:
    - data:
        entity_id: input_boolean.presence_bathroom_door
      service: input_boolean.turn_off

- id: bathroom_presence_on_shower
  alias: "[Bathroom] Presence On (Shower)"
  trigger:
    - entity_id: binary_sensor.presence_bathroom_shower_on
      from: "off"
      platform: state
      to: "on"
  condition:
    - condition: state
      entity_id: binary_sensor.someone_home
      state: "on"
  action:
    - data:
        entity_id: input_boolean.presence_bathroom_shower
      service: input_boolean.turn_on

- id: bathroom_presence_off_shower
  alias: "[Bathroom] Presence Off (Shower)"
  trigger:
    - entity_id: binary_sensor.presence_bathroom_shower_off
      from: "off"
      platform: state
      to: "on"
  condition:
    - condition: state
      entity_id: binary_sensor.someone_home
      state: "on"
  action:
    - data:
        entity_id: input_boolean.presence_bathroom_shower
      service: input_boolean.turn_off

- id: bathroom_presence_on_assistant
  alias: "[Bathroom] Presence On (Assistant)"
  trigger:
    - entity_id: light.bathroom_assistant
      from: "off"
      platform: state
      to: "on"
  condition:
    - condition: state
      entity_id: binary_sensor.someone_home
      state: "on"
  action:
    - data:
        entity_id: input_boolean.presence_bathroom_assistant
      service: input_boolean.turn_on

- id: bathroom_presence_off_assistant
  alias: "[Bathroom] Presence Off (Assistant)"
  trigger:
    - entity_id: light.bathroom_assistant
      from: "on"
      platform: state
      to: "off"
    - entity_id: input_boolean.presence_bathroom_assistant
      from: "on"
      platform: state
      to: "off"
  action:
    - data:
        entity_id: input_boolean.presence_bathroom_assistant
      service: input_boolean.turn_off
    - data:
        entity_id: light.bathroom_assistant
      service: light.turn_off
    - data:
        entity_id: light.bathroom
      service: light.turn_off

- id: bathroom_light_ceiling_adjust_brightness
  alias: "[Bathroom] Ceiling Light Adjust Brightness"
  trigger:
    - entity_id: light.switch_bathroom_ceiling
      from: "off"
      platform: state
      to: "on"
  action:
    - data_template:
        entity_id: light.bathroom_ceiling
        kelvin: "{{ state_attr('sensor.circadian_values', 'colortemp') | int }}"
        brightness_pct: "{{ state_attr('switch.circadian_lighting_bathroom', 'brightness') | int }}"
        transition: 3
      service: light.turn_on
