###############
# Dining Room #
###############
- id: dining_room_lights_on
  alias: "[Dining Room] Lights On"
  trigger:
    - entity_id: binary_sensor.presence_dining_room
      from: "off"
      platform: state
      to: "on"
  condition:
    - condition: state
      entity_id: binary_sensor.presence_dining_room
      state: "on"
    - condition: state
      entity_id: input_boolean.dnd_dining_room
      state: "off"
  action:
    - target:
        entity_id: switch.circadian_lighting_dining_room
      service: switch.turn_on
    - data_template:
        kelvin: "{{ state_attr('sensor.circadian_values', 'colortemp') | int }}"
        brightness_pct: "{{ state_attr('switch.circadian_lighting_dining_room', 'brightness') | int }}"
        transition: 3
      target:
        entity_id: light.dining_room
      service: light.turn_on

- id: dining_room_lights_off
  alias: "[Dining Room] Lights Off"
  trigger:
    - entity_id: binary_sensor.presence_dining_room
      from: "on"
      platform: state
      to: "off"
  action:
    - target:
        entity_id: switch.circadian_lighting_dining_room
      service: switch.turn_off
    - data:
        transition: 2
      target:
        entity_id: light.dining_room
      service: light.turn_off

- id: dining_room_presence_on_motion
  alias: "[Dining Room] Presence On (Motion)"
  trigger:
    - entity_id: binary_sensor.dining_room_sensor_motion
      from: "off"
      platform: state
      to: "on"
  condition:
    - condition: state
      entity_id: binary_sensor.someone_home
      state: "on"
  action:
    - target:
        entity_id: input_boolean.presence_dining_room_motion
      service: input_boolean.turn_on

- id: dining_room_presence_off_motion
  alias: "[Dining Room] Presence Off (Motion)"
  trigger:
    - entity_id: binary_sensor.dining_room_sensor_motion
      from: "on"
      platform: state
      to: "off"
      for:
        minutes: 3
  condition:
    - condition: state
      entity_id: input_boolean.dnd_dining_room
      state: "off"
  action:
    - target:
        entity_id: input_boolean.presence_dining_room_motion
      service: input_boolean.turn_off

- id: dining_room_presence_on_assistant
  alias: "[Dining Room] Presence On (Assistant)"
  trigger:
    - entity_id: light.dining_room_assistant
      from: "off"
      platform: state
      to: "on"
  condition:
    - condition: state
      entity_id: binary_sensor.someone_home
      state: "on"
  action:
    - target:
        entity_id: input_boolean.presence_dining_room_assistant
      service: input_boolean.turn_on
    - target:
        entity_id: input_boolean.dnd_dining_room
      service: input_boolean.turn_off

- id: dining_room_presence_off_assistant
  alias: "[Dining Room] Presence Off (Assistant)"
  trigger:
    - entity_id: light.dining_room_assistant
      from: "on"
      platform: state
      to: "off"
    - entity_id: input_boolean.presence_dining_room_assistant
      from: "on"
      platform: state
      to: "off"
  action:
    - target:
        entity_id: input_boolean.presence_dining_room_assistant
      service: input_boolean.turn_off
    - target:
        entity_id: light.dining_room_assistant
      service: light.turn_off

- id: dining_room_wake_up_tablet
  alias: "[Dining Room] Wake Up Tablet"
  trigger:
    - entity_id: binary_sensor.presence_dining_room
      from: "off"
      platform: state
      to: "on"
  action:
    - data:
        title: "Wake up"
        message: ""
      service: notify.mobile_app_brunos_ipad

- id: dining_room_espresso_bar_light_on
  alias: "[Dining Room] Turn on Espresso Bar Light"
  trigger:
    - entity_id: sensor.espresso_bar_socket_power
      platform: numeric_state
      above: 0
  action:
    - target:
        entity_id: light.espresso_bar
      service: light.turn_on

- id: dining_room_espresso_bar_light_off
  alias: "[Dining Room] Turn off Espresso Bar Light"
  trigger:
    - entity_id: sensor.espresso_bar_socket_power
      platform: numeric_state
      below: 1
      for:
        seconds: 30
  action:
    - target:
        entity_id: light.espresso_bar
      service: light.turn_off