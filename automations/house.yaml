###############
# House #
###############
- id: house_start_cleaning_when_away
  alias: "[House] Start Cleaning When Away"
  trigger:
    - entity_id: binary_sensor.someone_home
      for:
        minutes: 10
      from: "on"
      platform: state
      to: "off"
  condition:
    - condition: state
      entity_id: sun.sun
      state: above_horizon
    - condition: state
      entity_id: input_boolean.house_was_cleaned
      state: "off"
  action:
    - target:
        entity_id: vacuum.xiaomi_vacuum_cleaner
      service: vacuum.start

- id: house_start_cleaning_morning
  alias: "[House] Start Cleaning Every Weekday Morning"
  trigger:
    - platform: time
      at: "07:45:00"
  condition:
    - condition: state
      entity_id: binary_sensor.someone_home
      state: "on"
    - condition: state
      entity_id: input_boolean.house_was_cleaned
      state: "off"
    - condition: time
      weekday:
        - mon
        - tue
        - wed
        - thu
  action:
    - target:
        entity_id: vacuum.xiaomi_vacuum_cleaner
      service: vacuum.start

- id: house_stop_cleaning
  alias: "[House] Stop Cleaning"
  trigger:
    - entity_id: binary_sensor.someone_home
      from: "off"
      platform: state
      to: "on"
  condition:
    - condition: template
      value_template: '{{not is_state("vacuum.xiaomi_vacuum_cleaner", "docked")}}'
  action:
    - target:
        entity_id: vacuum.xiaomi_vacuum_cleaner
      service: vacuum.return_to_base

- id: house_finished_cleaning
  alias: "[House] Finished Cleaning"
  trigger:
    - entity_id: vacuum.xiaomi_vacuum_cleaner
      platform: state
      from: "returning"
      to: "docked"
  condition:
    - condition: state
      entity_id: input_boolean.house_was_cleaned
      state: "off"
  action:
    - target:
        entity_id: input_boolean.house_was_cleaned
      service: input_boolean.turn_on

- id: house_sarah_arrive_home
  alias: "[House] Sarah comes home"
  trigger:
    - entity_id: person.sarah_abrantes
      from: "not_home"
      platform: state
      to: "home"
  action:
    - target:
        entity_id: input_boolean.presence_sarah
      service: input_boolean.turn_on

- id: house_sarah_leave_home
  alias: "[House] Sarah leaves home"
  trigger:
    - entity_id: person.sarah_abrantes
      from: "home"
      platform: state
      to: "not_home"
  action:
    - target:
        entity_id: input_boolean.presence_sarah
      service: input_boolean.turn_off

- id: house_bruno_arrive_home
  alias: "[House] Bruno comes home"
  trigger:
    - entity_id: person.bruno_abrantes
      from: "not_home"
      platform: state
      to: "home"
  action:
    - target:
        entity_id: input_boolean.presence_bruno
      service: input_boolean.turn_on

- id: house_bruno_leave_home
  alias: "[House] Bruno leaves home"
  trigger:
    - entity_id: person.bruno_abrantes
      from: "home"
      platform: state
      to: "not_home"
  action:
    - target:
        entity_id: input_boolean.presence_bruno
      service: input_boolean.turn_off

- id: house_sarah_arrive_home_warn_bruno
  alias: "[House] Warn Bruno when Sarah comes home"
  trigger:
    - entity_id: input_boolean.presence_sarah
      from: "off"
      platform: state
      to: "on"
  condition:
    - condition: state
      entity_id: input_boolean.presence_bruno
      state: "on"
  action:
    - service: notify.mobile_app_bruno_s_iphone
      data:
        title: Sarah is arriving
        message: Hi Bruno, Sarah will be home in a few minutes.

- id: house_bruno_arrive_home_warn_sarah
  alias: "[House] Warn Sarah when Bruno comes home"
  trigger:
    - entity_id: input_boolean.presence_bruno
      from: "off"
      platform: state
      to: "on"
  condition:
    - condition: state
      entity_id: input_boolean.presence_sarah
      state: "on"
  action:
    - service: notify.mobile_app_sarah_abrantes_iphone
      data:
        title: Bruno is arriving
        message: Hi Sarah, Bruno will be home in a few minutes.

- id: house_all_leave
  alias: "[House] Leave House"
  trigger:
    - entity_id: binary_sensor.someone_home
      from: "on"
      platform: state
      to: "off"
  action:
    - target:
        entity_id: script.house_nobody_home
      service: script.turn_on

- id: house_thermostat_away
  alias: "[House] Set Thermostat Away"
  trigger:
    - entity_id: binary_sensor.someone_home
      from: "on"
      platform: state
      to: "off"
  action:
    - target:
        entity_id: climate.house
      service: climate.set_preset_mode
      data:
        preset_mode: away

- id: house_thermostat_home
  alias: "[House] Set Thermostat Home"
  trigger:
    - entity_id: binary_sensor.someone_home
      from: "off"
      platform: state
      to: "on"
  action:
    - target:
        entity_id: climate.house
      service: climate.set_preset_mode
      data:
        preset_mode: home

- id: house_sunrise
  alias: "[House] Sunrise"
  trigger:
    - platform: state
      entity_id: sun.sun
      from: below_horizon
      to: above_horizon
  action:
    - target:
        entity_id: group.dnd_other_rooms
      service: input_boolean.turn_off

- id: house_sunset
  alias: "[House] Sunset"
  trigger:
    - event: sunset
      platform: sun
      offset: -00:45:00
  condition:
    - condition: state
      entity_id: binary_sensor.someone_home
      state: "on"
  action:
    - target:
        entity_id:
          - scene.sunset
      service: scene.turn_on

- id: house_someone_arrives_after_sunset
  alias: "[House] Anyone comes home after Sunset"
  trigger:
    - entity_id: binary_sensor.someone_home
      from: "off"
      platform: state
      to: "on"
  condition:
    - condition: state
      entity_id: sun.sun
      state: below_horizon
  action:
    - target:
        entity_id:
          - scene.sunset
      service: scene.turn_on

- id: house_reset
  alias: "[House] Reset"
  trigger:
    platform: time
    at: '00:00:00'
  action:
    - target:
        entity_id: input_boolean.house_was_cleaned
      service: input_boolean.turn_off

- id: house_guest_mode_on
  alias: "[House] Turn on Guest Mode"
  trigger:
    - entity_id: lock.front_door
      from: "locked"
      platform: state
      to: "unlocked"
  condition:
    - condition: state
      entity_id: binary_sensor.someone_home
      state: "off"
  action:
    - target:
        entity_id: input_boolean.presence_someone
      service: input_boolean.turn_on

- id: house_guest_mode_off
  alias: "[House] Turn off Guest Mode"
  trigger:
    - entity_id: group.all_occupancy_sensors
      for:
        minutes: 10
      from: "on"
      platform: "state"
      to: "off"
  action:
    - target:
        entity_id: input_boolean.presence_someone
      service: input_boolean.turn_off

# - id: house_trash_today
#   alias: "[House] Warn Living Room when there's paper/plastic collection today"
#   trigger:
#     - platform: time
#       at: "07:10:00"
#   condition:
#     - condition: state
#       entity_id: sensor.afvalinfo_afval_thuis_trash_today
#       state: "Plastic, Paper"
#   action:
#     - service: media_player.volume_set
#       data:
#         volume_level: 0.4
#       target:
#         area_id: 38345693e76b4052805eb620aed23966
#     - service: media_player.play_media
#       data:
#         media_content_id: >-
#           https://github.com/inf0rmer/inf0rmer.github.io/raw/develop/assets/sounds/paper_plastic.mp3
#         media_content_type: music
#         announce: true
#       target:
#         area_id: 38345693e76b4052805eb620aed23966
